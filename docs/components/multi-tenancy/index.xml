<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubeflow â€“ Multi-Tenancy in Kubeflow</title>
    <link>http://osmatrix.github.io/docs/components/multi-tenancy/</link>
    <description>Recent content in Multi-Tenancy in Kubeflow on Kubeflow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="http://osmatrix.github.io/docs/components/multi-tenancy/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Introduction to Multi-user Isolation</title>
      <link>http://osmatrix.github.io/docs/components/multi-tenancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://osmatrix.github.io/docs/components/multi-tenancy/overview/</guid>
      <description>
        
        
        &lt;!-- raw HTML omitted --&gt;
&lt;p&gt;In a production environment, it is often necessary to share the same pool
of resources across different teams and users. These different users need
a reliable way to isolate and protect their own resources, without accidentally
viewing or changing each other&amp;rsquo;s resources.&lt;/p&gt;
&lt;p&gt;Kubeflow v1.0 supports multi-user isolation, which applies 
access control over namespaces and user-created
resources in a deployment. It provides the users with the
convenience of clutter-free browsing of notebooks, training jobs, serving
deployments and other resources. The isolation mechanisms also prevent
accidental deletion/modification of resources of other users in the deployment.&lt;/p&gt;
&lt;p&gt;Note that the isolation support in Kubeflow doesn&amp;rsquo;t provide any hard security
guarantees against malicious attempts by users to infiltrate other user&amp;rsquo;s
profiles.&lt;/p&gt;
&lt;h2 id=&#34;key-concepts&#34;&gt;Key concepts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;administrator&lt;/strong&gt;: An administrator is someone who creates and maintains the Kubeflow cluster.
This person has the permission to grant access permissions to others.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;user&lt;/strong&gt;: A user is someone who has access to some set of resources in the cluster. A user
needs to be granted access permissions by the administrator.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;profile&lt;/strong&gt;: A profile is a grouping of all Kubernetes clusters owned by a user.&lt;/p&gt;
&lt;h2 id=&#34;current-integration-and-limitations&#34;&gt;Current integration and limitations&lt;/h2&gt;
&lt;p&gt;The Jupyter notebooks service is the first application to be fully integrated with
multi-user isolation. Access to the notebooks and the creation of notebooks is 
controlled by the profile access policies set by the Administrator or the owners
of the profiles. Resources created by the notebooks (eg. training jobs and
deployments) will also inherit the same access.&lt;/p&gt;
&lt;p&gt;Metadata and Pipelines or any other applications currently don&amp;rsquo;t have full
fledged integration with isolation, though they will have access to the user
identity through the headers of the incoming requests. It&amp;rsquo;s upto the individual
applications to leverage the available identity and create isolation stories
that make sense for them.&lt;/p&gt;
&lt;p&gt;On GCP, the authentication and identify token is generated by GCP IAM and carried
through the requests as a JWT Token in header. Other cloud providers can have a
similar header to provide identity information.&lt;/p&gt;
&lt;p&gt;For on-premises deployments, Kubeflow leverages Dex as a federated OpenID connection
provider and can be integrated with LDAP or Active Directory to provide authentication
and identity services.&lt;/p&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Understand the &lt;a href=&#34;http://osmatrix.github.io/docs/components/multi-tenancy/design/&#34;&gt;detailed design&lt;/a&gt; of Kubeflow&amp;rsquo;s multi-user isolation feature.&lt;/li&gt;
&lt;li&gt;Learn &lt;a href=&#34;http://osmatrix.github.io/docs/components/multi-tenancy/getting-started/&#34;&gt;how to use multi-user isolation and profiles&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Design for Multi-user Isolation</title>
      <link>http://osmatrix.github.io/docs/components/multi-tenancy/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://osmatrix.github.io/docs/components/multi-tenancy/design/</guid>
      <description>
        
        
        &lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;design-overview&#34;&gt;Design overview&lt;/h2&gt;
&lt;p&gt;Kubeflow multi-tenancy is currently built around &lt;em&gt;user namespaces&lt;/em&gt;.
Specifically, Kubeflow defines user-specific namespaces and uses Kubernetes
&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;role-based access control (RBAC) policies&lt;/a&gt;
to manage user access.&lt;/p&gt;
&lt;p&gt;This feature enables users to share access to their workspaces.
Workspace owners can share/revoke workspace access with other users through Kubeflow UI.
Once invited, users will have permissions to edit the workspace and operate kubeflow custom
resources.&lt;/p&gt;
&lt;p&gt;Kubeflow multi-tenancy is self-served - new user can self-register to create and own
their workspace through the UI.&lt;/p&gt;
&lt;p&gt;Kubeflow uses Istio to control in-cluster traffic. By default, requests to user
workspaces are denied unless allowed by Istio RBAC. In-bound user requests are
identified using an identity provider (for example, Identity Aware Proxy (IAP) on
Google Cloud or Dex for on-premises deployments), and then validated by Istio RBAC rules.&lt;/p&gt;
&lt;p&gt;Internally, Kubeflow uses the &lt;em&gt;Profile&lt;/em&gt; custom resource to control all policies, roles, and bindings involved,
and to guarantee consistency. Kubeflow also offers a plugin interface to manage external resource/policy outside Kubernetes,
for example interfacing with Amazon Web Services APIs for identity management.&lt;/p&gt;
&lt;p&gt;The following diagram illustrates a Kubeflow multi-tenancy cluster with two user-access routes:
via the Kubeflow central dashboard and via the kubectl command-line interface (CLI).&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;feature-requirements&#34;&gt;Feature requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kubeflow uses &lt;a href=&#34;https://istio.io/&#34;&gt;Istio&lt;/a&gt; to apply access control over in-cluster traffic.&lt;/li&gt;
&lt;li&gt;Kubeflow profile controller needs &lt;code&gt;cluster admin&lt;/code&gt; permission.&lt;/li&gt;
&lt;li&gt;Kubeflow UI needs to be served behind an identity aware proxy. The identity aware proxy and Kubernetes
master should share the same identity management.&lt;/li&gt;
&lt;li&gt;The Kubeflow installation on Google Cloud uses &lt;a href=&#34;https://cloud.google.com/kubernetes-engine&#34;&gt;GKE&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/iap/docs/concepts-overview&#34;&gt;IAP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;On-premises installations of Kubeflow make use of &lt;a href=&#34;https://github.com/dexidp/dex&#34;&gt;Dex&lt;/a&gt;, a flexible OpenID Connect (OIDC) provider.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;supported-platforms&#34;&gt;Supported platforms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kubeflow multi-tenancy is enabled by default if you deploy Kubeflow on GCP with &lt;a href=&#34;http://osmatrix.github.io/docs/gke/deploy&#34;&gt;IAP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you are not on GCP, you can deploy multi-tenancy to &lt;a href=&#34;http://osmatrix.github.io/docs/started/k8s/kfctl-existing-arrikto/&#34;&gt;your existing cluster&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Learn &lt;a href=&#34;http://osmatrix.github.io/docs/components/multi-tenancy/getting-started/&#34;&gt;how to use multi-user isolation and profiles&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Read more about &lt;a href=&#34;http://osmatrix.github.io/docs/other-guides/istio-in-kubeflow/&#34;&gt;Istio in Kubeflow&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Getting Started with Multi-user Isolation</title>
      <link>http://osmatrix.github.io/docs/components/multi-tenancy/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://osmatrix.github.io/docs/components/multi-tenancy/getting-started/</guid>
      <description>
        
        
        &lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;usage-overview&#34;&gt;Usage overview&lt;/h2&gt;
&lt;p&gt;After Kubeflow is installed and configured, you will by default
be accessing your &lt;em&gt;primary profile&lt;/em&gt;. A &lt;em&gt;profile&lt;/em&gt; owns a Kubernetes namespace of
the same name along with a collection of Kubernetes resources. Users have view
and modify access to their primary profiles. You can share
access to your profile with another user in the system. When sharing the access
to a profile with another user, you can choose to whether provide only read access or read/modify
access. For all practical purposes when working
through the Kubeflow central dashboard, the active namespace is directly tied
with the active profile.&lt;/p&gt;
&lt;h2 id=&#34;example-of-usage&#34;&gt;Example of usage&lt;/h2&gt;
&lt;p&gt;You can select your active profile from the top bar on the Kubeflow central
dashboard.  Note that you can only view the profiles in the dropdown list
to which you have view or modify access.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;This guide illustrates the user isolation functionality using the Jupyter
notebooks service which is the first service in the system to have full
integration with the multi-user isolation functionality.&lt;/p&gt;
&lt;p&gt;Once an active profile has been selected, the Notebooks Servers UI
will display only the active notebook servers in the currently selected
profile. All other notebook servers remain hidden from you. If you switch
the active profile, the view will switch the list of active notebooks
appropriately. You can connect to any of the listed notebook servers and
view and modify the existing Jupyter notebooks available in the server.&lt;/p&gt;
&lt;p&gt;For example, the following image shows the list of Notebook servers available
in a user&amp;rsquo;s primary profile:&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;And when an unauthorized user accesses the Notebooks in this profile, they are
presented with an error.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;When you create Jupyter notebook servers from the Notebooks Servers UI,
the notebook pods are created in your active profile. If you don&amp;rsquo;t have
modify access to the active profile, you can only browse currently active
notebook servers and access the existing jupyter notebooks but cannot create
new notebook servers in that profile. You can create notebook
servers in your primary profile which they have view and modify access to.&lt;/p&gt;
&lt;h2 id=&#34;onboarding-a-new-user&#34;&gt;Onboarding a new user&lt;/h2&gt;
&lt;p&gt;Kubeflow v1.0 provides automatic profile creation for authenticated users on
first login. Additionally, an &lt;strong&gt;administrator&lt;/strong&gt; can create a profile for any
user in the kubeflow cluster.  Here an administrator is a person who has
&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&#34;&gt;&lt;em&gt;cluster-admin&lt;/em&gt;&lt;/a&gt;
role binding in the Kubernetes cluster. This person has permissions to create
and modify Kubernetes resources in the cluster. For example, the person who
deployed Kubeflow will have administration privileges in the cluster.&lt;/p&gt;
&lt;h3 id=&#34;pre-requisites-grant-user-minimal-kubernetes-cluster-view-access&#34;&gt;Pre-requisites: grant user minimal Kubernetes cluster view access&lt;/h3&gt;
&lt;p&gt;User should be given minimal permission scope that allows them to connect to the Kubernetes cluster.
For example for GCP users, they can be granted IAM roles: &lt;strong&gt;Kubernetes Engine Cluster Viewer&lt;/strong&gt; and &lt;strong&gt;IAP-secured Web App User&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;automatic-creation-of-profiles&#34;&gt;Automatic creation of profiles&lt;/h3&gt;
&lt;p&gt;Kubeflow v1.0 provides automatic profile creations as a convenience
to the users:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubeflow deployment process automatically creates a profile for the user
performing the deployment. When the user access the Central Dashboard
they&amp;rsquo;ll already see their profile in the dropdown list.&lt;/li&gt;
&lt;li&gt;When an authenticated user logs into the system and visits the Central
Dashboard for the first time, they trigger a profile creation automaticlly.
&lt;ul&gt;
&lt;li&gt;A brief message introduces profiles &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;The user can name their profile and click &lt;em&gt;Finish&lt;/em&gt;.  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;This redirects the user to the dashboard where they can view and select
thier profile in the dropdown list.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;manual-profile-creation&#34;&gt;Manual profile creation&lt;/h3&gt;
&lt;p&gt;An administrator can manually create profiles for users as described below.&lt;/p&gt;
&lt;p&gt;Create a
&lt;code&gt;profile.yaml&lt;/code&gt; file with the following contents on your local machine:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cat &amp;lt;&amp;lt; EOF &amp;gt; profile.yaml
apiVersion: kubeflow.org/v1beta1
kind: Profile
metadata:
  name: profileName   # replace with the name of profile you want, this will be user&#39;s namespace name
spec:
  owner:
    kind: User
    name: userid@email.com   # replace with the email of the user
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create the corresponding profile resource using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl create -f profile.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The above creates a profile named &lt;em&gt;profileName&lt;/em&gt; whose owner is
&lt;em&gt;&lt;a href=&#34;mailto:userid@email.com&#34;&gt;userid@email.com&lt;/a&gt;&lt;/em&gt; and has view and modify access to that profile.
The following resources are created as part of the profile creation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A Kubernetes namespace that shares the same name with the corresponding
profile.&lt;/li&gt;
&lt;li&gt;Kubernetes RBAC rolebinding for the namespace &lt;em&gt;Admin&lt;/em&gt;. This makes the
profile owner the namespace admin, allowing access to the namespace via
Kubernetes API (using kubectl).&lt;/li&gt;
&lt;li&gt;Istio namespace-scoped ServiceRole &lt;em&gt;ns-access-istio&lt;/em&gt;. This allows access to
all services in the target namespace via Istio routing.&lt;/li&gt;
&lt;li&gt;Istio namespace-scoped ServiceRoleBinding &lt;em&gt;owner-binding-istio&lt;/em&gt;. This binds
the ServiceRole ns-access-istio to the profile owner. The profile owner can
therefore access services in the namespace created.&lt;/li&gt;
&lt;li&gt;Namespace-scoped service-accounts editor and viewer to be used by
user-created pods in above namespace.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Due to a 1-to-1 correspondence of Profiles with Kubernetes
Namespaces, Profiles and Namespaces are sometimes used interchangably in the
documentation.&lt;/p&gt;
&lt;h3 id=&#34;batch-creation-of-user-profiles&#34;&gt;Batch creation of user profiles&lt;/h3&gt;
&lt;p&gt;Administrators might want to create profiles for multiple users as a batch. This can
be done by creating a &lt;code&gt;profile.yaml&lt;/code&gt; on the local machine with multiple sections of
profile descriptions as shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cat &amp;lt;&amp;lt; EOF &amp;gt; profile.yaml
apiVersion: kubeflow.org/v1beta1
kind: Profile
metadata:
  name: profileName1   # replace with the name of profile you want
spec:
  owner:
    kind: User
    name: userid1@email.com   # replace with the email of the user
---
apiVersion: kubeflow.org/v1beta1
kind: Profile
metadata:
  name: profileName2   # replace with the name of profile you want
spec:
  owner:
    kind: User
    name: userid2@email.com   # replace with the email of the user
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Apply to the Kubernetes cluster using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl create -f profile.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will create multiple profiles for each individual listed in the sections
in &lt;code&gt;profile.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;listing-and-describing-profiles&#34;&gt;Listing and describing profiles&lt;/h2&gt;
&lt;p&gt;An &lt;strong&gt;administrator&lt;/strong&gt; can list the existing profiles in the system:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl get profiles
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and describe a specific profile using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl describe profile profileName
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;deleting-an-existing-profile&#34;&gt;Deleting an existing profile&lt;/h2&gt;
&lt;p&gt;An &lt;strong&gt;administrator&lt;/strong&gt; can delete an existing profile using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl delete profile profileName
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will delete the profile, the corresponding namespace and any Kubernetes
resources associated with the profile. The profile&amp;rsquo;s owner or other users with
access to the profile will no longer have access to the profile and will not see
it in the dropdown list on the central dashboard.&lt;/p&gt;
&lt;h2 id=&#34;managing-contributors-through-ui&#34;&gt;Managing contributors through UI&lt;/h2&gt;
&lt;p&gt;Kubeflow v1.0 allows sharing of profiles with other users in the
system.  An owner of a profile can share access to their profile using the
&lt;em&gt;Manage Contributors&lt;/em&gt; tab available through the dashboard.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Here is an example of the Manage Contributors tab view:&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Notice that in the above view the account associated with the profile is
&lt;em&gt;Cluster Admin&lt;/em&gt; as this account was used to deploy Kubeflow. It lists the
profiles accessible to the user along with the role associated with that
profile.&lt;/p&gt;
&lt;p&gt;Adding and removing contributors is easily possible by simply adding/removing the 
email address or the user identifier in the &lt;em&gt;Contributors to your namespace&lt;/em&gt; field.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Once added, the Manage Contributors tab will show the profiles with thier
corresponding contributors listed. Note that &lt;em&gt;Cluster Admin&lt;/em&gt; can view all the 
profiles in the system along with their contributors.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;The contributors will have access to all the Kubernetes resources in the
namespace and will be able to created notebook servers as well as access
existing notebooks.  The contributor&amp;rsquo;s access can be removed by the owner of a
profile by visiting the &lt;em&gt;Manage Contributors&lt;/em&gt; tab and removing the user
email/id from the list of contributors.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
